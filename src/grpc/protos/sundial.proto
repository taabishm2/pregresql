syntax = "proto3";
package sundial_rpc;

service SundialRPC {
    rpc contactRemote(SundialRequest) returns (SundialResponse) {}
}

service SundialPostgresRPC {
    rpc getClassCatalog(ClassCatalogRequest) returns (ClassCatalogResponse) {}
}

message SundialRequest {
    enum RequestType {
        DummyReply = 0;
        READ_REQ = 1;
        PREPARE_REQ = 2;
        COMMIT_REQ = 3;
        ABORT_REQ = 4;
        SYS_REQ = 5;
        TERMINATE_REQ = 6;
        PAXOS_LOG = 7;
        PAXOS_LOG_FORWARD = 8;
        PAXOS_LOG_COLOCATE = 9;
        PAXOS_LOG_COLOCATE_FORWARD = 10;
        PAXOS_REPLICATE = 11;
        NUM_REQ_TYPES = 12;
    }
    message ReadRequest {
        uint64 key = 1;
        uint64 index_id = 2;
        uint64 access_type = 3;
    }
    message TupleData {
        uint64 key = 1;
        uint64 table_id = 2;
        uint64 size = 3;
        bytes data = 4;
        uint64 access_type = 5;
        uint64 version = 6;
        uint64 index_id = 7;
    }
    message NodeData {
        uint64 nid = 1;
    }

    enum NodeType {
        COORDINATOR = 0;
        PARTICIPANT = 1;
        STORAGE = 2;
    }

    enum ResponseType {
        RESP_OK = 0;
        RESP_ABORT = 1;
        RESP_FAIL = 2;
        PREPARED_OK = 3;
        PREPARED_OK_RO = 4;
        PREPARED_ABORT = 5;
        ACK = 6;
        SYS_RESP = 7;
        NUM_RESP_TYPES = 8;
    }

    uint64                  txn_id        = 1;
    RequestType             request_type  = 2;
    repeated ReadRequest    read_requests = 3;
    repeated TupleData      tuple_data    = 4;
    uint64                  log_data_size = 5;
    uint64                  node_id       = 6;
    repeated NodeData       nodes         = 7;
    uint64                  request_time  = 8;
    uint64                  thread_id     = 9;
    NodeType                node_type     = 10;
    uint64                  coord_id      = 11;
    int32                   txn_state     = 12;
    uint64                  semaphore     = 13;
    uint32                  thd_id        = 14;
    ResponseType            forward_msg   = 15;
    uint64                  receiver_id   = 16;
}

message SundialResponse {
    enum RequestType {
        DummyReply = 0;
        READ_REQ = 1;
        PREPARE_REQ = 2;
        COMMIT_REQ = 3;
        ABORT_REQ = 4;
        SYS_REQ = 5;
        TERMINATE_REQ = 6;
        PAXOS_LOG_ACK = 7;
        PAXOS_FORWARD_ACK = 8;
        NUM_REQ_TYPES = 9;
    }
    enum ResponseType {
        RESP_OK = 0;
        RESP_ABORT = 1;
        RESP_FAIL = 2;
        PREPARED_OK = 3;
        PREPARED_OK_RO = 4;
        PREPARED_ABORT = 5;
        ACK = 6;
        SYS_RESP = 7;
        NUM_RESP_TYPES = 8;
    }

    enum NodeType {
        COORDINATOR = 0;
        PARTICIPANT = 1;
        STORAGE = 2;
    }

    message TupleData {
        uint64 key = 1;
        uint64 table_id = 2;
        uint64 size = 3;
        bytes data = 4;
        uint64 access_type = 5;
        uint64 version = 6;
        uint64 index_id = 7;
    }

    uint64                  txn_id        = 1;
    ResponseType            response_type = 2;
    repeated TupleData      tuple_data    = 3;
    uint64                  node_id       = 4;
    RequestType             request_type  = 5;
    uint32                  thd_id        = 6;
    NodeType                node_type     = 7;
}

message ClassCatalogRequest {
    string relname = 2;
}

message ClassCatalogResponse {
    uint32 oid = 1;
    string relname = 2;
    uint32 relnamespace = 3;
    uint32 reltype = 4;
    uint32 reloftype = 5;
    uint32 relowner = 6;
    uint32 relam = 7;
    uint32 relfilenode = 8;
    uint32 reltablespace = 9;
    int32 relpages = 10;
    float reltuples = 11;
    int32 relallvisible = 12;
    uint32 reltoastrelid = 13;
    bool relhasindex = 14;
    bool relisshared = 15;
    // should be char type
    string relpersistence = 16;
    string relkind = 17;
    int32 relnatts = 18;
    int32 relchecks = 19;
    bool relhasrules = 20;
    bool relhastriggers = 21;
    bool relhassubclass = 22;
    bool relrowsecurity = 23;
    bool relforcerowsecurity = 24;
    bool relispopulated = 25;
    // should be char type
    string relreplident = 26;
    bool relispartition = 27;
    uint32 relrewrite = 28;
    uint32 relfrozenxid = 29;
    uint32 relminmxid = 30;
}

